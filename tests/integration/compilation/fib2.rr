// RUN: %rrc -i %s -o %t.rr.o --target object --opt-level aggressive
// RUN: %cc -c %S/fib2.c -o %t.c.o
// RUN: %cc %t.rr.o %t.c.o -o %t
// RUN: %t | %FileCheck %s
// CHECK: 267914296

pub fn fibonacci_impl(
    n: u64,
    a00: u64,
    a01: u64,
    a10: u64,
    a11: u64,
    b00: u64,
    b01: u64,
    b10: u64,
    b11: u64,
) -> u64 {
    if n == 0u64 {
        a01
    } else {
        let nb00 = b00 * b00 + b01 * b10;
        let nb01 = b00 * b01 + b01 * b11;
        let nb10 = b10 * b00 + b11 * b10;
        let nb11 = b10 * b01 + b11 * b11;
        if n % 2u64 == 1u64 {
            let na00 = a00 * b00 + a01 * b10;
            let na01 = a00 * b01 + a01 * b11;
            let na10 = a10 * b00 + a11 * b10;
            let na11 = a10 * b01 + a11 * b11;
            fibonacci_impl(
                n / 2u64,
                na00,
                na01,
                na10,
                na11,
                nb00,
                nb01,
                nb10,
                nb11,
            )
        } else {
            fibonacci_impl(
                n / 2u64,
                a00,
                a01,
                a10,
                a11,
                nb00,
                nb01,
                nb10,
                nb11,
            )
        }
    }
}

pub fn fibonacci(n : u64) -> u64 {
    fibonacci_impl(n, 1u64, 0u64, 0u64, 1u64, 0u64, 1u64, 1u64, 1u64)
}
